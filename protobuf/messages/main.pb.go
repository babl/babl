// Code generated by protoc-gen-go.
// source: main.proto
// DO NOT EDIT!

/*
Package babl is a generated protocol buffer package.

It is generated from these files:
	main.proto

It has these top-level messages:
	BinRequest
	BinReply
	Empty
	Pong
	Meta
	EchoRequest
	EchoResponse
	CancelRequest
*/
package babl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BinReply_Status int32

const (
	BinReply_SUCCESS                 BinReply_Status = 0
	BinReply_ERROR                   BinReply_Status = 1
	BinReply_EXECUTION_TIMEOUT       BinReply_Status = 2
	BinReply_EXECUTION_CANCELED      BinReply_Status = 3
	BinReply_EXECUTION_FLUSHED       BinReply_Status = 4
	BinReply_MODULE_RESPONSE_TIMEOUT BinReply_Status = 5
)

var BinReply_Status_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR",
	2: "EXECUTION_TIMEOUT",
	3: "EXECUTION_CANCELED",
	4: "EXECUTION_FLUSHED",
	5: "MODULE_RESPONSE_TIMEOUT",
}
var BinReply_Status_value = map[string]int32{
	"SUCCESS":                 0,
	"ERROR":                   1,
	"EXECUTION_TIMEOUT":       2,
	"EXECUTION_CANCELED":      3,
	"EXECUTION_FLUSHED":       4,
	"MODULE_RESPONSE_TIMEOUT": 5,
}

func (x BinReply_Status) String() string {
	return proto.EnumName(BinReply_Status_name, int32(x))
}
func (BinReply_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type BinRequest struct {
	Stdin      []byte            `protobuf:"bytes,1,opt,name=stdin,proto3" json:"stdin,omitempty"`
	Env        map[string]string `protobuf:"bytes,2,rep,name=env" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PayloadUrl string            `protobuf:"bytes,3,opt,name=payloadUrl" json:"payloadUrl,omitempty"`
	Id         uint64            `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	Module     string            `protobuf:"bytes,5,opt,name=module" json:"module,omitempty"`
}

func (m *BinRequest) Reset()                    { *m = BinRequest{} }
func (m *BinRequest) String() string            { return proto.CompactTextString(m) }
func (*BinRequest) ProtoMessage()               {}
func (*BinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BinRequest) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

type BinReply struct {
	Stdout     []byte          `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr     []byte          `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Exitcode   int32           `protobuf:"varint,3,opt,name=exitcode" json:"exitcode,omitempty"`
	PayloadUrl string          `protobuf:"bytes,4,opt,name=payloadUrl" json:"payloadUrl,omitempty"`
	Id         uint64          `protobuf:"varint,5,opt,name=id" json:"id,omitempty"`
	Module     string          `protobuf:"bytes,6,opt,name=module" json:"module,omitempty"`
	Status     BinReply_Status `protobuf:"varint,7,opt,name=status,enum=babl.BinReply_Status" json:"status,omitempty"`
	Error      string          `protobuf:"bytes,8,opt,name=error" json:"error,omitempty"`
}

func (m *BinReply) Reset()                    { *m = BinReply{} }
func (m *BinReply) String() string            { return proto.CompactTextString(m) }
func (*BinReply) ProtoMessage()               {}
func (*BinReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Pong struct {
	Val string `protobuf:"bytes,1,opt,name=val" json:"val,omitempty"`
}

func (m *Pong) Reset()                    { *m = Pong{} }
func (m *Pong) String() string            { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()               {}
func (*Pong) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Meta struct {
	Ping   *EchoRequest   `protobuf:"bytes,1,opt,name=ping" json:"ping,omitempty"`
	Cancel *CancelRequest `protobuf:"bytes,2,opt,name=cancel" json:"cancel,omitempty"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Meta) GetPing() *EchoRequest {
	if m != nil {
		return m.Ping
	}
	return nil
}

func (m *Meta) GetCancel() *CancelRequest {
	if m != nil {
		return m.Cancel
	}
	return nil
}

type EchoRequest struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SequenceNumber uint32 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	Payload        []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *EchoRequest) Reset()                    { *m = EchoRequest{} }
func (m *EchoRequest) String() string            { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()               {}
func (*EchoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type EchoResponse struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SequenceNumber uint32 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	Payload        []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *EchoResponse) Reset()                    { *m = EchoResponse{} }
func (m *EchoResponse) String() string            { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()               {}
func (*EchoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type CancelRequest struct {
	RequestId uint64 `protobuf:"varint,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *CancelRequest) Reset()                    { *m = CancelRequest{} }
func (m *CancelRequest) String() string            { return proto.CompactTextString(m) }
func (*CancelRequest) ProtoMessage()               {}
func (*CancelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*BinRequest)(nil), "babl.BinRequest")
	proto.RegisterType((*BinReply)(nil), "babl.BinReply")
	proto.RegisterType((*Empty)(nil), "babl.Empty")
	proto.RegisterType((*Pong)(nil), "babl.Pong")
	proto.RegisterType((*Meta)(nil), "babl.Meta")
	proto.RegisterType((*EchoRequest)(nil), "babl.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "babl.EchoResponse")
	proto.RegisterType((*CancelRequest)(nil), "babl.CancelRequest")
	proto.RegisterEnum("babl.BinReply_Status", BinReply_Status_name, BinReply_Status_value)
}

func init() { proto.RegisterFile("main.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x53, 0x5d, 0x8b, 0xd3, 0x4c,
	0x18, 0x7d, 0x93, 0x26, 0xfd, 0x78, 0xba, 0xbb, 0x6f, 0x76, 0x74, 0xd7, 0xb8, 0xa2, 0x94, 0x80,
	0x58, 0x58, 0xcc, 0x45, 0x05, 0x11, 0xef, 0x34, 0x1d, 0xb1, 0xd0, 0x8f, 0x65, 0xd2, 0x80, 0x78,
	0x53, 0xa7, 0xcd, 0xb0, 0x06, 0xd3, 0x49, 0x9c, 0x24, 0xc5, 0x5c, 0xfb, 0x03, 0xfd, 0x1d, 0xfe,
	0x0b, 0xc9, 0xcc, 0x74, 0xb7, 0x2b, 0x7a, 0xe9, 0xdd, 0x9c, 0xf3, 0x9c, 0xe7, 0xe3, 0xf4, 0x34,
	0x00, 0x5b, 0x9a, 0x70, 0x3f, 0x17, 0x59, 0x99, 0x21, 0x6b, 0x4d, 0xd7, 0xa9, 0xf7, 0xc3, 0x00,
	0x78, 0x9b, 0x70, 0xc2, 0xbe, 0x56, 0xac, 0x28, 0xd1, 0x7d, 0xb0, 0x8b, 0x32, 0x4e, 0xb8, 0x6b,
	0x0c, 0x8c, 0xe1, 0x11, 0x51, 0x00, 0x5d, 0x42, 0x8b, 0xf1, 0x9d, 0x6b, 0x0e, 0x5a, 0xc3, 0xfe,
	0xe8, 0xa1, 0xdf, 0x34, 0xfa, 0xb7, 0x4d, 0x3e, 0xe6, 0x3b, 0xcc, 0x4b, 0x51, 0x93, 0x46, 0x85,
	0x9e, 0x00, 0xe4, 0xb4, 0x4e, 0x33, 0x1a, 0x47, 0x22, 0x75, 0x5b, 0x03, 0x63, 0xd8, 0x23, 0x07,
	0x0c, 0x3a, 0x01, 0x33, 0x89, 0x5d, 0x6b, 0x60, 0x0c, 0x2d, 0x62, 0x26, 0x31, 0x3a, 0x87, 0xf6,
	0x36, 0x8b, 0xab, 0x94, 0xb9, 0xb6, 0xd4, 0x6a, 0x74, 0xf1, 0x12, 0xba, 0xfb, 0xc1, 0xc8, 0x81,
	0xd6, 0x17, 0x56, 0xcb, 0xa3, 0x7a, 0xa4, 0x79, 0x36, 0x87, 0xee, 0x68, 0x5a, 0x31, 0xd7, 0x94,
	0x9c, 0x02, 0xaf, 0xcd, 0x57, 0x86, 0xf7, 0xd3, 0x84, 0xae, 0x3c, 0x2e, 0x4f, 0xeb, 0x66, 0x78,
	0x51, 0xc6, 0x59, 0x55, 0x6a, 0x43, 0x1a, 0x69, 0x9e, 0x09, 0x21, 0xfb, 0x15, 0xcf, 0x84, 0x40,
	0x17, 0xd0, 0x65, 0xdf, 0x92, 0x72, 0x93, 0xc5, 0x4c, 0x9e, 0x6e, 0x93, 0x1b, 0xfc, 0x9b, 0x31,
	0xeb, 0x2f, 0xc6, 0xec, 0x3f, 0x18, 0x6b, 0x1f, 0x1a, 0x43, 0xcf, 0x9b, 0xdd, 0xb4, 0xac, 0x0a,
	0xb7, 0x33, 0x30, 0x86, 0x27, 0xa3, 0xb3, 0x83, 0x1f, 0x34, 0x4f, 0x6b, 0x3f, 0x94, 0x45, 0xa2,
	0x45, 0x8d, 0x53, 0x26, 0x44, 0x26, 0xdc, 0xae, 0x72, 0x2a, 0x81, 0xf7, 0xdd, 0x80, 0xb6, 0x12,
	0xa2, 0x3e, 0x74, 0xc2, 0x28, 0x08, 0x70, 0x18, 0x3a, 0xff, 0xa1, 0x1e, 0xd8, 0x98, 0x90, 0x05,
	0x71, 0x0c, 0x74, 0x06, 0xa7, 0xf8, 0x03, 0x0e, 0xa2, 0xe5, 0x64, 0x31, 0x5f, 0x2d, 0x27, 0x33,
	0xbc, 0x88, 0x96, 0x8e, 0x89, 0xce, 0x01, 0xdd, 0xd2, 0xc1, 0x9b, 0x79, 0x80, 0xa7, 0x78, 0xec,
	0xb4, 0xee, 0xca, 0xdf, 0x4d, 0xa3, 0xf0, 0x3d, 0x1e, 0x3b, 0x16, 0x7a, 0x04, 0x0f, 0x66, 0x8b,
	0x71, 0x34, 0xc5, 0x2b, 0x82, 0xc3, 0xab, 0xc5, 0x3c, 0xc4, 0x37, 0xb3, 0x6c, 0xaf, 0x03, 0x36,
	0xde, 0xe6, 0x65, 0xed, 0xb9, 0x60, 0x5d, 0x65, 0xfc, 0xba, 0x09, 0x6a, 0x47, 0xd3, 0x7d, 0x50,
	0x3b, 0x9a, 0x7a, 0x1f, 0xc1, 0x9a, 0xb1, 0x92, 0xa2, 0xa7, 0x60, 0xe5, 0x09, 0xbf, 0x96, 0xa5,
	0xfe, 0xe8, 0x54, 0x79, 0xc6, 0x9b, 0xcf, 0x99, 0xfe, 0x17, 0x11, 0x59, 0x46, 0x97, 0xd0, 0xde,
	0x50, 0xbe, 0x61, 0xa9, 0x0c, 0xa6, 0x3f, 0xba, 0xa7, 0x84, 0x81, 0xe4, 0xf6, 0x52, 0x2d, 0xf1,
	0x3e, 0x41, 0xff, 0x60, 0x82, 0x0e, 0x40, 0xed, 0x6e, 0x02, 0x78, 0x06, 0xff, 0x17, 0x4d, 0x89,
	0x6f, 0xd8, 0x8a, 0x57, 0xdb, 0x35, 0x53, 0x69, 0x1f, 0x93, 0x93, 0x3d, 0x3d, 0x97, 0x2c, 0x72,
	0xa1, 0xa3, 0x73, 0x94, 0xa1, 0x1f, 0x91, 0x3d, 0xf4, 0x28, 0x1c, 0xa9, 0x0d, 0x45, 0x9e, 0xf1,
	0x82, 0xfd, 0x8b, 0x15, 0x3e, 0x1c, 0xdf, 0x71, 0x87, 0x1e, 0x03, 0x08, 0xf5, 0x5c, 0xe9, 0x5d,
	0x16, 0xe9, 0x69, 0x66, 0x12, 0xaf, 0xdb, 0xf2, 0xf3, 0x7d, 0xf1, 0x2b, 0x00, 0x00, 0xff, 0xff,
	0xc8, 0x06, 0xc0, 0xdf, 0xcc, 0x03, 0x00, 0x00,
}
