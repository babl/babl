#!/usr/bin/env ruby

require 'active_support/core_ext/string'
require 'net/http'
require 'json'

MODULES_PATH = File.expand_path('../../protobuf/modules', __FILE__).freeze


uri = URI('https://babl.sh/api/modules')
modules = JSON.parse(Net::HTTP.get(uri))

modules_by_owner = modules.inject({}) do |h, mod|
  h[mod['owner']] ||= []
  h[mod['owner']] << mod['name'] if mod['type'] == 'babl'
  h[mod['owner']].sort!
  h
end


modules_by_owner.each do |(owner, mods)|
  owner_path = File.expand_path(owner, MODULES_PATH)
  system 'mkdir', '-p', owner_path

  contents = %{\
// Code generated by bin/module-proto
// DO NOT EDIT!


syntax = "proto3";

package babl.#{owner};
import "github.com/larskluge/babl/protobuf/messages/main.proto";

}

  mods.each do |mod|
    cc = mod.gsub('-', '_').gsub(/(\d+)/, "\t\\1\t").split("\t").map(&:camelize).join
    contents += %{
service #{cc} {
  rpc IO (.babl.BinRequest) returns (.babl.BinReply) {}
  rpc Ping (.babl.Empty) returns (.babl.Pong) {}
}
}
  end

  open(File.expand_path('main.proto', owner_path), 'w') { |f| f << contents }
end
